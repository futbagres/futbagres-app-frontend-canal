// Script para testar conex√£o com Supabase e verificar tabela events
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas!');
  console.error('NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl);
  console.error('NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? '[EXISTE]' : '[N√ÉO EXISTE]');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testConnection() {
  console.log('üîç Testando conex√£o com Supabase...\n');
  
  try {
    // Testar se a tabela events existe
    console.log('1Ô∏è‚É£ Verificando tabela events...');
    const { data, error } = await supabase
      .from('events')
      .select('*')
      .limit(1);
    
    if (error) {
      if (error.code === '42P01') {
        console.error('‚ùå TABELA "events" N√ÉO EXISTE!');
        console.error('\nüìã Voc√™ precisa executar o script SQL:');
        console.error('   1. Acesse https://supabase.com');
        console.error('   2. V√° em SQL Editor');
        console.error('   3. Cole o conte√∫do de supabase/events-table.sql');
        console.error('   4. Execute o script\n');
      } else {
        console.error('‚ùå Erro ao acessar tabela:', error.message);
        console.error('C√≥digo:', error.code);
        console.error('Detalhes:', error.hint);
      }
      process.exit(1);
    }
    
    console.log('‚úÖ Tabela events existe!');
    console.log('   Registros encontrados:', data?.length || 0);
    
    // Testar inser√ß√£o
    console.log('\n2Ô∏è‚É£ Testando inser√ß√£o de evento...');
    const testEvent = {
      titulo: 'Teste de Conex√£o',
      tipo_futebol: 'campo',
      max_participantes: 10,
      recorrencia: 'unico',
      horario_inicio: '18:00',
      horario_fim: '19:00',
      valor_por_pessoa: 20.00,
      local: 'Campo de teste',
      descricao: 'Evento de teste - pode deletar',
      criador_id: '00000000-0000-0000-0000-000000000000', // ID fict√≠cio
      status: 'ativo'
    };
    
    const { data: insertData, error: insertError } = await supabase
      .from('events')
      .insert([testEvent])
      .select()
      .single();
    
    if (insertError) {
      console.error('‚ùå Erro ao inserir:', insertError.message);
      console.error('C√≥digo:', insertError.code);
      if (insertError.code === '23503') {
        console.error('\n‚ö†Ô∏è  ERRO: criador_id n√£o existe (esperado para este teste)');
        console.error('   Isso √© normal - a tabela existe mas precisa de um usu√°rio real');
        console.error('   ‚úÖ A estrutura da tabela est√° CORRETA!\n');
      }
    } else {
      console.log('‚úÖ Inser√ß√£o bem-sucedida!');
      console.log('   Evento criado:', insertData);
      
      // Deletar o evento de teste
      await supabase
        .from('events')
        .delete()
        .eq('id', insertData.id);
      console.log('   Evento de teste removido');
    }
    
    console.log('\n‚ú® DIAGN√ìSTICO COMPLETO!\n');
    
  } catch (err) {
    console.error('‚ùå Erro inesperado:', err.message);
    process.exit(1);
  }
}

testConnection();
